1.content Place holder

<asp:Content ID="Content1" ContentPlaceHolderId="body" runat="server">


</asp:Content>



2.printing a page

<asp:Button ID="printButton" runat="server" Text="Print" OnClientClick="javascript:window.print();" />



3.from database using datatable and display in a gridview

protected void Page_Load(object sender, EventArgs e)
{
        SqlConnection con;
        SqlCommand cmd;       
        LabelPaybillMonth.Text = DateTime.Now.ToString("MMMM-yyyy");
        con = new SqlConnection("Data Source=RME-4-PC;Initial Catalog=leaveforms;Persist Security Info=True;User ID=sa;Password=server");
        con.Open();
        cmd = new SqlCommand("select name,project_no from project_staff_details", con);
        SqlDataAdapter da = new SqlDataAdapter(cmd);
        DataTable dt = new DataTable();
        da.Fill(dt);
        GridViewPaybill.DataSource = dt;
        GridViewPaybill.DataBind();    

}



4.printing a gridview from a page as a pdf(Let me tell you something....this will print the whole page....So be cautious...)

using System.IO;
using iTextSharp.text;
using iTextSharp.text.pdf;
using iTextSharp.text.html.simpleparser;

protected void ButtonPrint_Click(object sender, EventArgs e)
{
      Response.ContentType = "application/pdf";
      Response.AddHeader("content-disposition", "attachment;filename=UserDetails.pdf");
      Response.Cache.SetCacheability(HttpCacheability.NoCache);
      StringWriter sw = new StringWriter();
      HtmlTextWriter hw = new HtmlTextWriter(sw);
      this.Page.RenderControl(hw);
      StringReader sr = new StringReader(sw.ToString());
      Document pdfDoc = new Document(PageSize.A4, 10f, 10f, 100f, 0.0f);
        HTMLWorker htmlparser = new HTMLWorker(pdfDoc);
        PdfWriter.GetInstance(pdfDoc, Response.OutputStream);
        pdfDoc.Open();
        htmlparser.Parse(sr);
        pdfDoc.Close();
        Response.Write(pdfDoc);
        Response.End();  
    }
   
public override void VerifyRenderingInServerForm(Control control)
    {
        /* Confirms that an HtmlForm control is rendered for the specified ASP.NET
           server control at run time. */
    }

caution:--   EnableEventValidation="false" of the correspoding page to false....
                and then override.....
                Should include iTextSharp dll file in bin directory...



5.printing the gridview data only....(this is much safer approach caution:- it only works with some gridview templates they are lilacs in Mist, sand & sky(looks good), oceanica(looks good), autumn and finally without any format(Even the table is visible but page looks like shit....)

        Response.ContentType = "application/pdf";
        Response.AddHeader("content-disposition",
         "attachment;filename=GridViewExport.pdf");
        Response.Cache.SetCacheability(HttpCacheability.NoCache);
        StringWriter sw = new StringWriter();
        HtmlTextWriter hw = new HtmlTextWriter(sw);
        GridViewPaybill.AllowPaging = false;
        GridViewPaybill.DataBind();
        GridViewPaybill.RenderControl(hw);
        StringReader sr = new StringReader(sw.ToString());
        Document pdfDoc = new Document(PageSize.A4, 10f, 10f, 10f, 0f);
        HTMLWorker htmlparser = new HTMLWorker(pdfDoc);
        PdfWriter.GetInstance(pdfDoc, Response.OutputStream);
        pdfDoc.Open();
        htmlparser.Parse(sr);
        pdfDoc.Close();
        Response.Write(pdfDoc);
        Response.End(); 



this is to make your account as administrator

net user administrator /active:yes




